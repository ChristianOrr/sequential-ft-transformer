name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Test with pytest
        run: poetry run pytest tests/ --cov=sequential_ft_transformer --cov-report=xml

      - name: Use Codecov to track coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml   # coverage report

      - name: Build documentation
        run: poetry run make html --directory docs/

  cd:
    # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install python-semantic-release
        run: pip install python-semantic-release

      - name: Bump package version 
        env:
          # This token is created automatically by GH Actions
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com        
            semantic-release --verbose version         

      - name: Install package
        run: poetry install

      - name: Build package
        run: poetry build

      - name: Check if package version was incremented
        id: check_version_increment
        run: |
          prev_version=$(git describe --abbrev=0 --tags HEAD~1)  # Get previous version from 1 commits back
          current_version=$(poetry version -s)  # Get current version from pyproject.toml
          current_version=v$current_version # Add v so that the name format matches
          echo "prev_version: $prev_version"
          echo "current_version: $current_version"
          if [[ "$prev_version" == "$current_version" ]]; then
            echo "Versions are equal"
            echo "version_incremented=false" >> $GITHUB_OUTPUT
            echo "Package version was not incremented. No new package release will be published."
          else
            echo "Versions are not equal"
            echo "version_incremented=true" >> $GITHUB_OUTPUT
            echo "Package version was incremented. A new package release will be published."
          fi

      - name: Use Python Semantic Release to prepare release
        if: steps.check_version_increment.outputs.version_incremented == 'true'
        env:
          # This token is created automatically by GH Actions
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com    
            poetry run semantic-release --verbose publish

      - name: Publish to TestPyPI
        if: steps.check_version_increment.outputs.version_incremented == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Test install from TestPyPI
        if: steps.check_version_increment.outputs.version_incremented == 'true'
        run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            sequential_ft_transformer

      - name: Publish to PyPI
        if: steps.check_version_increment.outputs.version_incremented == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
